/// AUTOGENERATED - DO NOT EDIT

import {
  Hex,
  Tuple,
  Codec,
  CodecType,
  Enum,
  _void,
  AccountId,
  Struct,
  u8,
  compactNumber,
  u64,
  compactBn,
  u32,
  SS58String,
  HexString,
} from "@polkadot-api/substrate-bindings";

export const _bytesSeq = Hex();
export type _bytesSeq = CodecType<typeof _bytesSeq>;

type IcFrame_systemPalletCallRemarkTupled = Codec<[CodecType<typeof _bytesSeq>]>;
export const cFrame_systemPalletCallRemarkTupled: IcFrame_systemPalletCallRemarkTupled = Tuple(_bytesSeq);
export type cFrame_systemPalletCallRemarkTupled = CodecType<typeof cFrame_systemPalletCallRemarkTupled>;

const _accountId = AccountId();
export type _accountId = CodecType<typeof _accountId>;

type IcFrame_supportDispatchRawOrigin = Codec<
  | { tag: "Root"; value: CodecType<typeof _void> }
  | { tag: "Signed"; value: CodecType<typeof _accountId> }
  | { tag: "None"; value: CodecType<typeof _void> }
>;
const cFrame_supportDispatchRawOrigin: IcFrame_supportDispatchRawOrigin = Enum({
  Root: _void,
  Signed: _accountId,
  None: _void,
});
export type cFrame_supportDispatchRawOrigin = CodecType<typeof cFrame_supportDispatchRawOrigin>;

const cXcmV3JunctionNetworkIdByFork = Struct({ block_number: u64, block_hash: _accountId });
export type cXcmV3JunctionNetworkIdByFork = CodecType<typeof cXcmV3JunctionNetworkIdByFork>;

const cXcmV3JunctionNetworkIdEthereum = Struct({ chain_id: compactBn });
export type cXcmV3JunctionNetworkIdEthereum = CodecType<typeof cXcmV3JunctionNetworkIdEthereum>;

type IcXcmV3JunctionNetworkId = Codec<
  | { tag: "ByGenesis"; value: CodecType<typeof _accountId> }
  | { tag: "ByFork"; value: CodecType<typeof cXcmV3JunctionNetworkIdByFork> }
  | { tag: "Polkadot"; value: CodecType<typeof _void> }
  | { tag: "Kusama"; value: CodecType<typeof _void> }
  | { tag: "Westend"; value: CodecType<typeof _void> }
  | { tag: "Rococo"; value: CodecType<typeof _void> }
  | { tag: "Wococo"; value: CodecType<typeof _void> }
  | { tag: "Ethereum"; value: CodecType<typeof cXcmV3JunctionNetworkIdEthereum> }
  | { tag: "BitcoinCore"; value: CodecType<typeof _void> }
  | { tag: "BitcoinCash"; value: CodecType<typeof _void> }
>;
const cXcmV3JunctionNetworkId: IcXcmV3JunctionNetworkId = Enum({
  ByGenesis: _accountId,
  ByFork: cXcmV3JunctionNetworkIdByFork,
  Polkadot: _void,
  Kusama: _void,
  Westend: _void,
  Rococo: _void,
  Wococo: _void,
  Ethereum: cXcmV3JunctionNetworkIdEthereum,
  BitcoinCore: _void,
  BitcoinCash: _void,
});
export type cXcmV3JunctionNetworkId = CodecType<typeof cXcmV3JunctionNetworkId>;

type IcOption = Codec<
  { tag: "None"; value: CodecType<typeof _void> } | { tag: "Some"; value: CodecType<typeof cXcmV3JunctionNetworkId> }
>;
const cOption: IcOption = Enum({ None: _void, Some: cXcmV3JunctionNetworkId });
export type cOption = CodecType<typeof cOption>;

const cXcmV3JunctionJunctionAccountId32 = Struct({ network: cOption, id: _accountId });
export type cXcmV3JunctionJunctionAccountId32 = CodecType<typeof cXcmV3JunctionJunctionAccountId32>;

const cXcmV3JunctionJunctionAccountIndex64 = Struct({ network: cOption, index: compactBn });
export type cXcmV3JunctionJunctionAccountIndex64 = CodecType<typeof cXcmV3JunctionJunctionAccountIndex64>;

const cdc49 = Hex(20);
export type cdc49 = CodecType<typeof cdc49>;

const cXcmV3JunctionJunctionAccountKey20 = Struct({ network: cOption, key: cdc49 });
export type cXcmV3JunctionJunctionAccountKey20 = CodecType<typeof cXcmV3JunctionJunctionAccountKey20>;

const cXcmV3JunctionJunctionGeneralKey = Struct({ length: u8, data: _accountId });
export type cXcmV3JunctionJunctionGeneralKey = CodecType<typeof cXcmV3JunctionJunctionGeneralKey>;

const cdc17 = Hex(4);
export type cdc17 = CodecType<typeof cdc17>;

type IcXcmV3JunctionBodyId = Codec<
  | { tag: "Unit"; value: CodecType<typeof _void> }
  | { tag: "Moniker"; value: CodecType<typeof cdc17> }
  | { tag: "Index"; value: CodecType<typeof compactNumber> }
  | { tag: "Executive"; value: CodecType<typeof _void> }
  | { tag: "Technical"; value: CodecType<typeof _void> }
  | { tag: "Legislative"; value: CodecType<typeof _void> }
  | { tag: "Judicial"; value: CodecType<typeof _void> }
  | { tag: "Defense"; value: CodecType<typeof _void> }
  | { tag: "Administration"; value: CodecType<typeof _void> }
  | { tag: "Treasury"; value: CodecType<typeof _void> }
>;
const cXcmV3JunctionBodyId: IcXcmV3JunctionBodyId = Enum({
  Unit: _void,
  Moniker: cdc17,
  Index: compactNumber,
  Executive: _void,
  Technical: _void,
  Legislative: _void,
  Judicial: _void,
  Defense: _void,
  Administration: _void,
  Treasury: _void,
});
export type cXcmV3JunctionBodyId = CodecType<typeof cXcmV3JunctionBodyId>;

const cXcmV3JunctionBodyPartMembers = Struct({ count: compactNumber });
export type cXcmV3JunctionBodyPartMembers = CodecType<typeof cXcmV3JunctionBodyPartMembers>;

const cXcmV3JunctionBodyPartFraction = Struct({ nom: compactNumber, denom: compactNumber });
export type cXcmV3JunctionBodyPartFraction = CodecType<typeof cXcmV3JunctionBodyPartFraction>;

const cXcmV3JunctionBodyPartAtLeastProportion = Struct({ nom: compactNumber, denom: compactNumber });
export type cXcmV3JunctionBodyPartAtLeastProportion = CodecType<typeof cXcmV3JunctionBodyPartAtLeastProportion>;

const cXcmV3JunctionBodyPartMoreThanProportion = Struct({ nom: compactNumber, denom: compactNumber });
export type cXcmV3JunctionBodyPartMoreThanProportion = CodecType<typeof cXcmV3JunctionBodyPartMoreThanProportion>;

type IcXcmV3JunctionBodyPart = Codec<
  | { tag: "Voice"; value: CodecType<typeof _void> }
  | { tag: "Members"; value: CodecType<typeof cXcmV3JunctionBodyPartMembers> }
  | { tag: "Fraction"; value: CodecType<typeof cXcmV3JunctionBodyPartFraction> }
  | { tag: "AtLeastProportion"; value: CodecType<typeof cXcmV3JunctionBodyPartAtLeastProportion> }
  | { tag: "MoreThanProportion"; value: CodecType<typeof cXcmV3JunctionBodyPartMoreThanProportion> }
>;
const cXcmV3JunctionBodyPart: IcXcmV3JunctionBodyPart = Enum({
  Voice: _void,
  Members: cXcmV3JunctionBodyPartMembers,
  Fraction: cXcmV3JunctionBodyPartFraction,
  AtLeastProportion: cXcmV3JunctionBodyPartAtLeastProportion,
  MoreThanProportion: cXcmV3JunctionBodyPartMoreThanProportion,
});
export type cXcmV3JunctionBodyPart = CodecType<typeof cXcmV3JunctionBodyPart>;

const cXcmV3JunctionJunctionPlurality = Struct({ id: cXcmV3JunctionBodyId, part: cXcmV3JunctionBodyPart });
export type cXcmV3JunctionJunctionPlurality = CodecType<typeof cXcmV3JunctionJunctionPlurality>;

type IcXcmV3JunctionJunction = Codec<
  | { tag: "Parachain"; value: CodecType<typeof compactNumber> }
  | { tag: "AccountId32"; value: CodecType<typeof cXcmV3JunctionJunctionAccountId32> }
  | { tag: "AccountIndex64"; value: CodecType<typeof cXcmV3JunctionJunctionAccountIndex64> }
  | { tag: "AccountKey20"; value: CodecType<typeof cXcmV3JunctionJunctionAccountKey20> }
  | { tag: "PalletInstance"; value: CodecType<typeof u8> }
  | { tag: "GeneralIndex"; value: CodecType<typeof compactBn> }
  | { tag: "GeneralKey"; value: CodecType<typeof cXcmV3JunctionJunctionGeneralKey> }
  | { tag: "OnlyChild"; value: CodecType<typeof _void> }
  | { tag: "Plurality"; value: CodecType<typeof cXcmV3JunctionJunctionPlurality> }
  | { tag: "GlobalConsensus"; value: CodecType<typeof cXcmV3JunctionNetworkId> }
>;
const cXcmV3JunctionJunction: IcXcmV3JunctionJunction = Enum({
  Parachain: compactNumber,
  AccountId32: cXcmV3JunctionJunctionAccountId32,
  AccountIndex64: cXcmV3JunctionJunctionAccountIndex64,
  AccountKey20: cXcmV3JunctionJunctionAccountKey20,
  PalletInstance: u8,
  GeneralIndex: compactBn,
  GeneralKey: cXcmV3JunctionJunctionGeneralKey,
  OnlyChild: _void,
  Plurality: cXcmV3JunctionJunctionPlurality,
  GlobalConsensus: cXcmV3JunctionNetworkId,
});
export type cXcmV3JunctionJunction = CodecType<typeof cXcmV3JunctionJunction>;

type IcXcmV3JunctionsJunctionsX2 = Codec<
  [CodecType<typeof cXcmV3JunctionJunction>, CodecType<typeof cXcmV3JunctionJunction>]
>;
const cXcmV3JunctionsJunctionsX2: IcXcmV3JunctionsJunctionsX2 = Tuple(cXcmV3JunctionJunction, cXcmV3JunctionJunction);
export type cXcmV3JunctionsJunctionsX2 = CodecType<typeof cXcmV3JunctionsJunctionsX2>;

type IcXcmV3JunctionsJunctionsX3 = Codec<
  [
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
  ]
>;
const cXcmV3JunctionsJunctionsX3: IcXcmV3JunctionsJunctionsX3 = Tuple(
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
);
export type cXcmV3JunctionsJunctionsX3 = CodecType<typeof cXcmV3JunctionsJunctionsX3>;

type IcXcmV3JunctionsJunctionsX4 = Codec<
  [
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
  ]
>;
const cXcmV3JunctionsJunctionsX4: IcXcmV3JunctionsJunctionsX4 = Tuple(
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
);
export type cXcmV3JunctionsJunctionsX4 = CodecType<typeof cXcmV3JunctionsJunctionsX4>;

type IcXcmV3JunctionsJunctionsX5 = Codec<
  [
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
  ]
>;
const cXcmV3JunctionsJunctionsX5: IcXcmV3JunctionsJunctionsX5 = Tuple(
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
);
export type cXcmV3JunctionsJunctionsX5 = CodecType<typeof cXcmV3JunctionsJunctionsX5>;

type IcXcmV3JunctionsJunctionsX6 = Codec<
  [
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
  ]
>;
const cXcmV3JunctionsJunctionsX6: IcXcmV3JunctionsJunctionsX6 = Tuple(
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
);
export type cXcmV3JunctionsJunctionsX6 = CodecType<typeof cXcmV3JunctionsJunctionsX6>;

type IcXcmV3JunctionsJunctionsX7 = Codec<
  [
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
  ]
>;
const cXcmV3JunctionsJunctionsX7: IcXcmV3JunctionsJunctionsX7 = Tuple(
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
);
export type cXcmV3JunctionsJunctionsX7 = CodecType<typeof cXcmV3JunctionsJunctionsX7>;

type IcXcmV3JunctionsJunctionsX8 = Codec<
  [
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
    CodecType<typeof cXcmV3JunctionJunction>,
  ]
>;
const cXcmV3JunctionsJunctionsX8: IcXcmV3JunctionsJunctionsX8 = Tuple(
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
  cXcmV3JunctionJunction,
);
export type cXcmV3JunctionsJunctionsX8 = CodecType<typeof cXcmV3JunctionsJunctionsX8>;

type IcXcmV3JunctionsJunctions = Codec<
  | { tag: "Here"; value: CodecType<typeof _void> }
  | { tag: "X1"; value: CodecType<typeof cXcmV3JunctionJunction> }
  | { tag: "X2"; value: CodecType<typeof cXcmV3JunctionsJunctionsX2> }
  | { tag: "X3"; value: CodecType<typeof cXcmV3JunctionsJunctionsX3> }
  | { tag: "X4"; value: CodecType<typeof cXcmV3JunctionsJunctionsX4> }
  | { tag: "X5"; value: CodecType<typeof cXcmV3JunctionsJunctionsX5> }
  | { tag: "X6"; value: CodecType<typeof cXcmV3JunctionsJunctionsX6> }
  | { tag: "X7"; value: CodecType<typeof cXcmV3JunctionsJunctionsX7> }
  | { tag: "X8"; value: CodecType<typeof cXcmV3JunctionsJunctionsX8> }
>;
const cXcmV3JunctionsJunctions: IcXcmV3JunctionsJunctions = Enum({
  Here: _void,
  X1: cXcmV3JunctionJunction,
  X2: cXcmV3JunctionsJunctionsX2,
  X3: cXcmV3JunctionsJunctionsX3,
  X4: cXcmV3JunctionsJunctionsX4,
  X5: cXcmV3JunctionsJunctionsX5,
  X6: cXcmV3JunctionsJunctionsX6,
  X7: cXcmV3JunctionsJunctionsX7,
  X8: cXcmV3JunctionsJunctionsX8,
});
export type cXcmV3JunctionsJunctions = CodecType<typeof cXcmV3JunctionsJunctions>;

const cXcmV3MultilocationMultiLocation = Struct({ parents: u8, interior: cXcmV3JunctionsJunctions });
export type cXcmV3MultilocationMultiLocation = CodecType<typeof cXcmV3MultilocationMultiLocation>;

type IcPallet_xcmPalletOrigin = Codec<
  | { tag: "Xcm"; value: CodecType<typeof cXcmV3MultilocationMultiLocation> }
  | { tag: "Response"; value: CodecType<typeof cXcmV3MultilocationMultiLocation> }
>;
const cPallet_xcmPalletOrigin: IcPallet_xcmPalletOrigin = Enum({
  Xcm: cXcmV3MultilocationMultiLocation,
  Response: cXcmV3MultilocationMultiLocation,
});
export type cPallet_xcmPalletOrigin = CodecType<typeof cPallet_xcmPalletOrigin>;

type IcCumulus_pallet_xcmPalletOrigin = Codec<
  { tag: "Relay"; value: CodecType<typeof _void> } | { tag: "SiblingParachain"; value: CodecType<typeof u32> }
>;
const cCumulus_pallet_xcmPalletOrigin: IcCumulus_pallet_xcmPalletOrigin = Enum({ Relay: _void, SiblingParachain: u32 });
export type cCumulus_pallet_xcmPalletOrigin = CodecType<typeof cCumulus_pallet_xcmPalletOrigin>;

type IcPallet_collectiveRawOriginMembers = Codec<[CodecType<typeof u32>, CodecType<typeof u32>]>;
const cPallet_collectiveRawOriginMembers: IcPallet_collectiveRawOriginMembers = Tuple(u32, u32);
export type cPallet_collectiveRawOriginMembers = CodecType<typeof cPallet_collectiveRawOriginMembers>;

type IcPallet_collectiveRawOrigin = Codec<
  | { tag: "Members"; value: CodecType<typeof cPallet_collectiveRawOriginMembers> }
  | { tag: "Member"; value: CodecType<typeof _accountId> }
  | { tag: "_Phantom"; value: CodecType<typeof _void> }
>;
const cPallet_collectiveRawOrigin: IcPallet_collectiveRawOrigin = Enum({
  Members: cPallet_collectiveRawOriginMembers,
  Member: _accountId,
  _Phantom: _void,
});
export type cPallet_collectiveRawOrigin = CodecType<typeof cPallet_collectiveRawOrigin>;

type IcCollectives_polkadot_runtimeFellowshipOriginsPallet_originsOrigin = Codec<
  | { tag: "FellowshipCandidates"; value: CodecType<typeof _void> }
  | { tag: "Fellows"; value: CodecType<typeof _void> }
  | { tag: "FellowshipExperts"; value: CodecType<typeof _void> }
  | { tag: "FellowshipMasters"; value: CodecType<typeof _void> }
  | { tag: "Fellowship1Dan"; value: CodecType<typeof _void> }
  | { tag: "Fellowship2Dan"; value: CodecType<typeof _void> }
  | { tag: "Fellowship3Dan"; value: CodecType<typeof _void> }
  | { tag: "Fellowship4Dan"; value: CodecType<typeof _void> }
  | { tag: "Fellowship5Dan"; value: CodecType<typeof _void> }
  | { tag: "Fellowship6Dan"; value: CodecType<typeof _void> }
  | { tag: "Fellowship7Dan"; value: CodecType<typeof _void> }
  | { tag: "Fellowship8Dan"; value: CodecType<typeof _void> }
  | { tag: "Fellowship9Dan"; value: CodecType<typeof _void> }
>;
const cCollectives_polkadot_runtimeFellowshipOriginsPallet_originsOrigin: IcCollectives_polkadot_runtimeFellowshipOriginsPallet_originsOrigin =
  Enum({
    FellowshipCandidates: _void,
    Fellows: _void,
    FellowshipExperts: _void,
    FellowshipMasters: _void,
    Fellowship1Dan: _void,
    Fellowship2Dan: _void,
    Fellowship3Dan: _void,
    Fellowship4Dan: _void,
    Fellowship5Dan: _void,
    Fellowship6Dan: _void,
    Fellowship7Dan: _void,
    Fellowship8Dan: _void,
    Fellowship9Dan: _void,
  });
export type cCollectives_polkadot_runtimeFellowshipOriginsPallet_originsOrigin = CodecType<
  typeof cCollectives_polkadot_runtimeFellowshipOriginsPallet_originsOrigin
>;

type IcCollectives_polkadot_runtimeOriginCaller = Codec<
  | { tag: "system"; value: CodecType<typeof cFrame_supportDispatchRawOrigin> }
  | { tag: "PolkadotXcm"; value: CodecType<typeof cPallet_xcmPalletOrigin> }
  | { tag: "CumulusXcm"; value: CodecType<typeof cCumulus_pallet_xcmPalletOrigin> }
  | { tag: "AllianceMotion"; value: CodecType<typeof cPallet_collectiveRawOrigin> }
  | {
      tag: "FellowshipOrigins";
      value: CodecType<typeof cCollectives_polkadot_runtimeFellowshipOriginsPallet_originsOrigin>;
    }
  | { tag: "Void"; value: CodecType<typeof _void> }
>;
export const cCollectives_polkadot_runtimeOriginCaller: IcCollectives_polkadot_runtimeOriginCaller = Enum(
  {
    system: cFrame_supportDispatchRawOrigin,
    PolkadotXcm: cPallet_xcmPalletOrigin,
    CumulusXcm: cCumulus_pallet_xcmPalletOrigin,
    AllianceMotion: cPallet_collectiveRawOrigin,
    FellowshipOrigins: cCollectives_polkadot_runtimeFellowshipOriginsPallet_originsOrigin,
    Void: _void,
  },
  [0, 31, 32, 51, 62, 5],
);
export type cCollectives_polkadot_runtimeOriginCaller = CodecType<typeof cCollectives_polkadot_runtimeOriginCaller>;

const cFrame_supportTraitsPreimagesBoundedLegacy = Struct({ hash: _accountId });
export type cFrame_supportTraitsPreimagesBoundedLegacy = CodecType<typeof cFrame_supportTraitsPreimagesBoundedLegacy>;

const cFrame_supportTraitsPreimagesBoundedLookup = Struct({ hash: _accountId, len: u32 });
export type cFrame_supportTraitsPreimagesBoundedLookup = CodecType<typeof cFrame_supportTraitsPreimagesBoundedLookup>;

type IcFrame_supportTraitsPreimagesBounded = Codec<
  | { tag: "Legacy"; value: CodecType<typeof cFrame_supportTraitsPreimagesBoundedLegacy> }
  | { tag: "Inline"; value: CodecType<typeof _bytesSeq> }
  | { tag: "Lookup"; value: CodecType<typeof cFrame_supportTraitsPreimagesBoundedLookup> }
>;
export const cFrame_supportTraitsPreimagesBounded: IcFrame_supportTraitsPreimagesBounded = Enum({
  Legacy: cFrame_supportTraitsPreimagesBoundedLegacy,
  Inline: _bytesSeq,
  Lookup: cFrame_supportTraitsPreimagesBoundedLookup,
});
export type cFrame_supportTraitsPreimagesBounded = CodecType<typeof cFrame_supportTraitsPreimagesBounded>;

type IcFrame_supportTraitsScheduleDispatchTime = Codec<
  { tag: "At"; value: CodecType<typeof u32> } | { tag: "After"; value: CodecType<typeof u32> }
>;
export const cFrame_supportTraitsScheduleDispatchTime: IcFrame_supportTraitsScheduleDispatchTime = Enum({
  At: u32,
  After: u32,
});
export type cFrame_supportTraitsScheduleDispatchTime = CodecType<typeof cFrame_supportTraitsScheduleDispatchTime>;

type IcPallet_referendaPalletCallSubmitTupled = Codec<
  [
    CodecType<typeof cCollectives_polkadot_runtimeOriginCaller>,
    CodecType<typeof cFrame_supportTraitsPreimagesBounded>,
    CodecType<typeof cFrame_supportTraitsScheduleDispatchTime>,
  ]
>;
export const cPallet_referendaPalletCallSubmitTupled: IcPallet_referendaPalletCallSubmitTupled = Tuple(
  cCollectives_polkadot_runtimeOriginCaller,
  cFrame_supportTraitsPreimagesBounded,
  cFrame_supportTraitsScheduleDispatchTime,
);
export type cPallet_referendaPalletCallSubmitTupled = CodecType<typeof cPallet_referendaPalletCallSubmitTupled>;
